"""
Django settings for letters project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ["LETTERS_SECRET_KEY"]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = "runserver" in sys.argv

ALLOWED_HOSTS = [
    "letters.scruffylogic.com",
]
if DEBUG:
    ALLOWED_HOSTS = ["*"]


LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/'

SESSION_COOKIE_AGE = 60 * 60 * 24 * 365  # One year
SESSION_COOKIE_SECURE = not DEBUG

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'raven.contrib.django.raven_compat',
    'newsletters',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'letters',
        'USER': 'letters',
        'PASSWORD': os.environ["LETTERS_DB_PASSWORD"],
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

EMAIL_BACKEND = "sendgrid_backend.SendgridBackend"
SENDGRID_API_KEY = os.environ["LETTERS_SENDGRID_KEY"]

if 'test' in sys.argv:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# EMAIL_HOST = os.environ["LETTERS_EMAIL_HOST"]
# EMAIL_HOST_USER = os.environ["LETTERS_EMAIL_HOST_USER"]
# EMAIL_HOST_PASSWORD = os.environ["LETTERS_EMAIL_HOST_PASSWORD"]
# EMAIL_PORT = os.environ["LETTERS_EMAIL_PORT"]
DEFAULT_FROM_EMAIL = os.environ["LETTERS_DEFAULT_FROM_EMAIL"]
# SERVER_EMAIL = os.environ["LETTERS_SERVER_EMAIL"]
# EMAIL_USE_TLS=False


import raven
if "RAVEN_DNS_WHATIS" in os.environ and not DEBUG:
    RAVEN_CONFIG = {
        'dsn': os.environ['RAVEN_DNS_LETTERS'],
        'release': raven.fetch_git_sha(os.path.join(os.path.dirname(__file__), "../")),
    }